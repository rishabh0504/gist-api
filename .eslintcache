[{"D:\\dubizzle\\github-ui\\src\\App.js":"1","D:\\dubizzle\\github-ui\\src\\api\\gist-api.js":"2","D:\\dubizzle\\github-ui\\src\\index.js":"3","D:\\dubizzle\\github-ui\\src\\config\\api_config.js":"4","D:\\dubizzle\\github-ui\\src\\components\\FileDetails.component.js":"5"},{"size":2111,"mtime":1608344573821,"results":"6","hashOfConfig":"7"},{"size":593,"mtime":1608343812696,"results":"8","hashOfConfig":"7"},{"size":500,"mtime":1607809315609,"results":"9","hashOfConfig":"7"},{"size":54,"mtime":1608343786025,"results":"10","hashOfConfig":"7"},{"size":1509,"mtime":1608344857409,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"14"},"15u07cl",{"filePath":"15","messages":"16","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"17"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"22","messages":"23","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"24"},"D:\\dubizzle\\github-ui\\src\\App.js",["25"],"import { useEffect, useState } from 'react';\nimport { getGist } from './api/gist-api';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './App.css';\nimport FileDetails from './components/FileDetails.component';\n\nfunction App() {\n  const [username, setUsername] = useState(\"\");\n  const [gists, setGists] = useState([]);\n\n  useEffect(async () => {\n    if (!!username) {\n      const gistsDetail = await getGist(username);\n      setGists(gistsDetail);\n    }\n  }, [username]);\n\n  return (\n    <div>\n\n      {/* Header Part */}\n      <div className='header theme-color'>\n        Header\n      </div>\n\n      {/* Input container Part */}\n\n      <div className=\"container filter mt-4 mb-4\">\n        <div className=\"col-3\">\n          <input\n            type=\"text\"\n            className=\"form-control\"\n            placeholder=\"Search By Username...\"\n            value={username}\n            onChange={e => setUsername(e.target.value)} />\n        </div>\n      </div>\n      {\n        gists && (\n          gists.map((eachGist, index) => {\n            return (\n              <div className=\"container\" key={index}>\n                <div className=\"col-12 mt-3 mb-3\">\n                  <div className=\"card\">\n                    <div className=\"card-body\">\n                      <div className=\"col-6\">\n                        <ul>\n                          {\n                            eachGist && eachGist.files && (\n                              Object.keys(eachGist.files).map((fileKey, index) => {\n                                return (<li key={index}> {eachGist.files[fileKey].language} :{eachGist.files[fileKey].filename} </li>)\n                              })\n                            )\n                          }\n                        </ul>\n                      </div>\n                      <div className=\"col-6\">\n                        <FileDetails files={eachGist.files} id={eachGist.id} />\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            )\n          })\n        )\n      }\n    </div>\n  );\n}\n\nexport default App;\n","D:\\dubizzle\\github-ui\\src\\api\\gist-api.js",["26"],"import React from 'react';\r\nimport axios from 'axios';\r\nimport { API_ENDPOINT } from '../config/api_config';\r\n\r\n// Setting default base url\r\naxios.defaults.baseURL = API_ENDPOINT;\r\n\r\n\r\nexport const getGist = async (username) => {\r\n    try {\r\n        const data = await axios.get(`users/${username}/gists`);\r\n        return data.data;\r\n    } catch (error) {\r\n        return []\r\n    }\r\n};\r\n\r\nexport const getGistForked = async (gistId) => {\r\n    try {\r\n        const data = await axios.get(`gists/${gistId}/forks`);\r\n        return data.data;\r\n    } catch (error) {\r\n        return []\r\n    }\r\n};","D:\\dubizzle\\github-ui\\src\\index.js",[],"D:\\dubizzle\\github-ui\\src\\config\\api_config.js",[],"D:\\dubizzle\\github-ui\\src\\components\\FileDetails.component.js",["27","28","29","30","31"],"import { useEffect, useState } from \"react\";\r\nimport { getGistForked } from './../api/gist-api';\r\n\r\n\r\nfunction FileDetails(props) {\r\n    const [languages, setLanguages] = useState({});\r\n    const [id, setId] = useState('');\r\n    useEffect(() => {\r\n        const foundLanguages = [];\r\n        const foundFilesMapping = {};\r\n        Object.keys(props.files).map((fileKey, index) => {\r\n            if (foundLanguages.includes(props.files[fileKey].language)) {\r\n                foundFilesMapping[props.files[fileKey].language].push(props.files[fileKey].filename)\r\n            } else {\r\n                foundLanguages.push(props.files[fileKey].language)\r\n                foundFilesMapping[props.files[fileKey].language] = [props.files[fileKey].filename]\r\n            }\r\n        })\r\n        setLanguages(foundFilesMapping);\r\n    }, [props.files]);\r\n\r\n    useEffect(async () => {\r\n        const forkedData = await getGistForked(id);\r\n        // Couldn't \r\n        // console.log('forkedData', forkedData);\r\n    }, [props.id])\r\n    return (\r\n        <div >\r\n            <ul>\r\n                {\r\n                    languages && (\r\n                        Object.keys(languages).map((keyItem, index) => {\r\n                            return (\r\n                                <li key={index}>{keyItem} : {languages[keyItem].join(', ')} </li>\r\n                            )\r\n                        })\r\n                    )\r\n                }\r\n            </ul>\r\n        </div>\r\n    )\r\n}\r\nexport default FileDetails;\r\n",{"ruleId":"32","severity":1,"message":"33","line":11,"column":13,"nodeType":"34","endLine":16,"endColumn":4},{"ruleId":"35","severity":1,"message":"36","line":1,"column":8,"nodeType":"37","messageId":"38","endLine":1,"endColumn":13},{"ruleId":"35","severity":1,"message":"39","line":7,"column":16,"nodeType":"37","messageId":"38","endLine":7,"endColumn":21},{"ruleId":"40","severity":1,"message":"41","line":11,"column":55,"nodeType":"34","messageId":"42","endLine":11,"endColumn":57},{"ruleId":"32","severity":1,"message":"33","line":22,"column":15,"nodeType":"34","endLine":26,"endColumn":6},{"ruleId":"35","severity":1,"message":"43","line":23,"column":15,"nodeType":"37","messageId":"38","endLine":23,"endColumn":25},{"ruleId":"32","severity":1,"message":"44","line":26,"column":8,"nodeType":"45","endLine":26,"endColumn":18,"suggestions":"46"},"react-hooks/exhaustive-deps","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression","no-unused-vars","'React' is defined but never used.","Identifier","unusedVar","'setId' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","expectedInside","'forkedData' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'id'. Either include it or remove the dependency array.","ArrayExpression",["47"],{"desc":"48","fix":"49"},"Update the dependencies array to be: [id, props.id]",{"range":"50","text":"51"},[1007,1017],"[id, props.id]"]